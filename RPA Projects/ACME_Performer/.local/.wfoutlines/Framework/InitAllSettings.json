{"model":{"path":"Framework/InitAllSettings.xaml","arguments":[{"name":"out_Config","type":"System.Collections.Generic.Dictionary\u00602[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e","direction":"Out"},{"name":"in_ConfigFile","type":"System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e","direction":"In"},{"name":"in_ConfigSheets","type":"System.String[], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e","direction":"In"}],"outline":{"displayName":"Initialize All Settings","nodeName":"Sequence","annotation":"Initialize, populate and output a configuration Dictionary to be used throughout the project. \nSettings and constants are read from the local configuration file, and assets are fetched from Orchestrator. \nAsset values overwrite settings and constant values if they are defined with the same name.","items":[{"displayName":"Log Message (Initialize All Settings)","nodeName":"LogMessage","items":[{"nodeName":"CSharpValue"}]},{"displayName":"Assign out_Config (initialization)","nodeName":"Assign","items":[{"nodeName":"CSharpReference"},{"nodeName":"CSharpValue"}]},{"displayName":"For each configuration sheet","nodeName":"ForEach","items":[{"displayName":"Get local settings and constants","nodeName":"Sequence","annotation":"Read settings and constants from the configuration file and add them to the Config dictionary.","items":[{"displayName":"Read range (Settings and Constants sheets)","nodeName":"ReadRange","items":[{"nodeName":"CSharpReference"},{"nodeName":"CSharpValue"},{"nodeName":"CSharpValue"}]},{"displayName":"For each configuration row","nodeName":"ForEachRow","items":[{"displayName":"Body","nodeName":"Sequence","items":[{"displayName":"If configuration row is not empty","nodeName":"If","annotation":"Read non-empty rows in the sheet."}]},{"nodeName":"CSharpValue"}]}]},{"nodeName":"CSharpValue"}]},{"displayName":"Try initializing assets","nodeName":"TryCatch","items":[{"displayName":"Get Orchestrator assets","nodeName":"Sequence","annotation":"Get from Orchestrator the values of assets listed in the Assets sheet.","items":[{"displayName":"Read range (Assets sheet)","nodeName":"ReadRange","items":[{"nodeName":"CSharpReference"},{"nodeName":"CSharpValue"}]},{"displayName":"For each asset row","nodeName":"ForEachRow","items":[{"displayName":"Get Orchestrator Asset","nodeName":"TryCatch","items":[{"displayName":"Assign Acme credentials asset and folder.","nodeName":"Sequence"},{"nodeName":"Catch"}]},{"nodeName":"CSharpValue"}]}]},{"nodeName":"Catch","items":[{"displayName":"Rethrow loading asset exception","nodeName":"Rethrow"}]}]}]}},"lastModified":"2025-10-26T22:25:15.7524037Z"}